稳定性的定义：
    数组arr中有若干个元素，其中A元素和B元素相等，并且A元素在B元素前面，如果使用某种排序算法排序后，
    能够保证A元素依然在B元素前面，可以说这个算法是稳定
稳定性的意义：
    如果一个数组只需要一次排序，则稳定性一般是没有意义的，如果一个数组需要多次排序，稳定性是有意义的。
    例如要排序的内容是一组商品对象，第一次排序按照价格由高到低的顺序排序，第二次排序按照销量由高到底
    排序，如果第二次排序使用稳定排性算法，就可以使得相同销量的对象依旧保持着价格由高到低的顺序，只有
    销量不同的对象才需要重新排序，这样就可以保持第一次排序的原有意义，而且可以减少系统开销
常见排序算法的稳定性：
    1.冒泡排序
        只有当arr[i]>arr[i+1]时，才会交换元素的位置，而相等的时候并不会交换位置，所以冒泡排序是一种
      稳定排序算法
    2.选择排序
        选择排序是给每个位置选择当前元素最小的，它会不断交换位置，所以是不稳定排序算法
    3.插入排序
        比较是从有序序列的末尾开始，也就是想要插入的元素和已经有序的最大者开始比起，如果比它大则直接
        插入在其后面，否则一直往前找到它该插入的位置。如果碰见一个和插入元素相等的，那么把要插入的元
        素放在相等的元素后面。所以插入排序是稳定排序算法
    4.希尔排序
        希尔排序是按照不同步长对元素进行插入排序，虽然一次排序是稳定的，但是在不同的插入排序过程中，
        相同的元素可能在各自的插入排序中移动，最后其稳定性就会被打乱，所以希尔排序是不稳定排序
    5.归并排序
        只有当arr[i]<arr[i+1]时，才会交换元素的位置，而相等的时候并不会交换位置，所以归并排序是一种
      稳定排序算法
    6.快速排序
        快速排序需要一个基准值，在基准值的右侧找一个比基准值大的元素，在基准值的左侧找一个比基准值小
      的元素，然后交换，所以快速排序是一种不稳定排序算法


