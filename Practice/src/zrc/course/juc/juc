1.什么是juc
    (1).全称是java.util.concurrent(java并发编程工具)
    (2).由三部分组成:
        java.util.concurrent
        java.util.concurrent.atomic
        java.util.concurrent.locks

2.进程/线程回顾
    (1)什么是进程/线程
        · 进程是一个具有一定独立功能的程序关于某个数据集合的一次1运行活动。它是操作系统动态执行的基本单位，在传统的
        操作系统中，进程既是基本的分配单元，也是基本的执行单元
        · 通常一个进程中可以包含若干个线程，当然一个进程中至少有一个线程，不然没有存在的意义。线程可以利用进程所拥有
        的资源，在引入线程操作系统中，通常都是把进程作为分配资源的基本单位，而把线程作为独立运行和独立调度的基本单位
        由于线程比进程更小，基本上不拥有系统资源，故对它的调度所付出的开销就会小的多，能够高效的提高系统程序间并发执
        行的程度
    (2)什么事并发/并行

3.线程的生命周期
    我们可以将线程的生命周期分为下面几种状态：
        新建: 当我们new Thread的时候，一个线程就被创建了
        就绪: 当我们创建出一个线程的对象，并且调用start()方法，就意味着这个线程进入了就绪状态，就绪态意味着线程可以随时被CPU所调度
                如果在线程执行的过程中，该线程主动调用yield()方法，也会使得线程从运行态转为运行态
        运行: 线程的就绪状态与运行状态是不同的，当线程获得CPU的执行权时，就以为线程进入了运行行态
        死亡: 当一个线程的任务执行完毕以后，线程就会死亡，也就是run方法中的代码执行结束
              当线程调用stop()【已过期】方法、或者出现异常且没有处理的情况下，线程也会死亡
        阻塞: 在某种情况下，被人为的挂起，在线程的执行过程中，如果使用了join()、sleep()、wait()、等待同步锁都会让线程进入阻塞状态
            当join()执行完毕，sleep()到达时间、wait()被notify()或notifyAll()唤醒，锁被释放，都会让线程进入就绪态